{"name": "Гость может добавить товар в корзину (проверка промо)", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError: В сообщение об успешном добавлении товара в корзину указано неверное название товара \"Coders at Work book\", а должно быть \"Coders at Work\"\nassert 'Coders at Work' == 'Coders at Work book'\n  - Coders at Work book\n  ?               -----\n  + Coders at Work", "trace": "self = <module_5.test_product_page.TestProductPage object at 0x1028c9af0>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8ff88d67d978f896e955101aa4b9ded8\")>, promo_offer = 'offer7'\n\n    @allure.title('Гость может добавить товар в корзину (проверка промо)')\n    @pytest.mark.xfail\n    @pytest.mark.parametrize('promo_offer',\n                             [\"offer0\", \"offer1\", \"offer2\", \"offer3\", \"offer4\", \"offer5\", \"offer6\", \"offer7\", \"offer8\",\n                              \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        # arrange\n        full_link = link_with_promo + promo_offer\n        page = ProductPage(browser, full_link)\n        page.open()\n    \n        # act\n        page.add_to_basket()\n        page.solve_quiz_and_get_code()\n    \n        # assert\n        page.should_be_success_add_to_basket_message()\n    \n        expected_product_title = page.get_product_title()\n        actual_product_title = page.get_success_add_to_basket_product_name()\n    \n        with allure.step(\"Проверяем, что в сообщении об успешном добавлении товара указано верное название товара\"):\n>           assert expected_product_title == actual_product_title, \\\n                f'В сообщение об успешном добавлении товара в корзину указано неверное название товара ' \\\n                f'\"{actual_product_title}\", а должно быть \"{expected_product_title}\"'\nE           AssertionError: В сообщение об успешном добавлении товара в корзину указано неверное название товара \"Coders at Work book\", а должно быть \"Coders at Work\"\nE           assert 'Coders at Work' == 'Coders at Work book'\nE             - Coders at Work book\nE             ?               -----\nE             + Coders at Work\n\nmodule_5/test_product_page.py:70: AssertionError"}, "steps": [{"name": "Открываем страницу http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7", "status": "passed", "start": 1624568553422, "stop": 1624568554812}, {"name": "Добавляем товар в корзину", "status": "passed", "start": 1624568554812, "stop": 1624568554869}, {"name": "Решаем задачку и получаем код для вставки на Степик", "status": "passed", "start": 1624568554869, "stop": 1624568555638}, {"name": "Проверяем, что на странице отображается сообщение об успешном добавлении товара в корзину", "status": "passed", "start": 1624568555638, "stop": 1624568555648}, {"name": "Извлекаем название товара из описания на странице", "status": "passed", "start": 1624568555648, "stop": 1624568555664}, {"name": "Ищем плашку с сообщением об успешном добавлении товара в корзину", "status": "passed", "start": 1624568555664, "stop": 1624568555680}, {"name": "Проверяем, что в сообщении об успешном добавлении товара указано верное название товара", "status": "failed", "statusDetails": {"message": "AssertionError: В сообщение об успешном добавлении товара в корзину указано неверное название товара \"Coders at Work book\", а должно быть \"Coders at Work\"\nassert 'Coders at Work' == 'Coders at Work book'\n  - Coders at Work book\n  ?               -----\n  + Coders at Work\n", "trace": "  File \"/Users/mosigo/Yandex.Disk.localized/Documents/PycharmProjects/StepikSelenium/module_5/test_product_page.py\", line 70, in test_guest_can_add_product_to_basket\n    assert expected_product_title == actual_product_title, \\\n"}, "start": 1624568555680, "stop": 1624568555685}], "attachments": [{"name": "stdout", "source": "7472d4b5-800f-4c29-91da-210d89752cdc-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "promo_offer", "value": "'offer7'"}], "start": 1624568553421, "stop": 1624568555686, "uuid": "bd612ed6-121e-4037-99de-afc433dcecb0", "historyId": "87c815e2ff57b386ed8170cc72071f13", "testCaseId": "f8eff88bc5381217a60409d7a8069ee9", "fullName": "test_product_page.TestProductPage#test_guest_can_add_product_to_basket", "labels": [{"name": "story", "value": "Гость добавляет товары в корзину"}, {"name": "feature", "value": "Добавление товаров в корзину"}, {"name": "suite", "value": "Страница продукта"}, {"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "subSuite", "value": "TestProductPage"}, {"name": "host", "value": "iMac.local"}, {"name": "thread", "value": "59546-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_product_page"}]}