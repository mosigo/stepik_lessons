{"name": "Залогиненный пользователь после добавления товара в корзину видит корректные сообщения об успешности операции", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nselenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#messages div.alert:nth-child(1) div.alertinner strong\"}\n  (Session info: chrome=91.0.4472.114)", "trace": "self = <module_5.test_product_page.TestUserAddToBasketFromProductPage object at 0x10a6068e0>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ea68cc8c70459eeee79430ccf655b4d9\")>\n\n    @allure.title('Залогиненный пользователь после добавления товара в корзину видит корректные сообщения '\n                  'об успешности операции')\n    @pytest.mark.xfail\n    def test_user_can_add_product_to_basket(self, browser):\n        # arrange\n        page = ProductPage(browser, link)\n        page.open()\n    \n        # act\n        page.add_to_basket()\n    \n        # assert\n        allure.attach(browser.get_screenshot_as_png(), name=\"Screenshot\", attachment_type=AttachmentType.PNG)\n        page.should_be_success_add_to_basket_message()\n    \n        expected_product_title = page.get_product_title()\n>       actual_product_title = page.get_success_add_to_basket_product_name()\n\nmodule_5/test_product_page.py:182: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmodule_5/pages/product_page.py:23: in get_success_add_to_basket_product_name\n    return self.browser.find_element(*ProductPageLocators.SUCCESS_ADD_TO_BASKET_PRODUCT_TITLE).text\n/usr/local/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:976: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n/usr/local/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10a60c070>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...fff205d98fc _pthread_start + 224\\\\n20  libsystem_pthread.dylib             0x00007fff205d5443 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#messages div.alert:nth-child(1) div.alertinner strong\"}\nE         (Session info: chrome=91.0.4472.114)\n\n/usr/local/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:242: NoSuchElementException"}, "steps": [{"name": "Открываем страницу http://selenium1py.pythonanywhere.com/catalogue/the-city-and-the-stars_95/", "status": "passed", "start": 1624546688228, "stop": 1624546688991}, {"name": "Добавляем товар в корзину", "status": "passed", "start": 1624546688991, "stop": 1624546689886}, {"name": "Проверяем, что на странице отображается сообщение об успешном добавлении товара в корзину", "status": "passed", "start": 1624546690447, "stop": 1624546690454}, {"name": "Извлекаем название товара из описания на странице", "status": "passed", "start": 1624546690454, "stop": 1624546690469}, {"name": "Ищем плашку с сообщением об успешном добавлении товара в корзину", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#messages div.alert:nth-child(1) div.alertinner strong\"}\n  (Session info: chrome=91.0.4472.114)\n\n", "trace": "  File \"/usr/local/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/mosigo/Yandex.Disk.localized/Documents/PycharmProjects/StepikSelenium/module_5/pages/product_page.py\", line 23, in get_success_add_to_basket_product_name\n    return self.browser.find_element(*ProductPageLocators.SUCCESS_ADD_TO_BASKET_PRODUCT_TITLE).text\n  File \"/usr/local/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 976, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n  File \"/usr/local/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1624546690469, "stop": 1624546700473}], "attachments": [{"name": "Screenshot", "source": "2fc2fde1-c6fe-4f8c-b457-e36309a50bdd-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "7aa79474-0535-44dd-8afa-1d688cd95047-attachment.txt", "type": "text/plain"}], "start": 1624546688227, "stop": 1624546700478, "uuid": "6ae0aa42-5983-4d05-b16f-9884124ea80c", "historyId": "9172ddc0d6b907a80ba7befefcba349e", "testCaseId": "98e7380dbfc189a872bc552f301ce74c", "fullName": "test_product_page.TestUserAddToBasketFromProductPage#test_user_can_add_product_to_basket", "labels": [{"name": "feature", "value": "Добавление товаров в корзину"}, {"name": "story", "value": "Залогиненный пользователь добавляет товары в корзину"}, {"name": "suite", "value": "Страница продукта"}, {"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "subSuite", "value": "TestUserAddToBasketFromProductPage"}, {"name": "host", "value": "MacBook-Pro-Olga.local"}, {"name": "thread", "value": "19402-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_product_page"}], "links": [{"type": "issue", "url": "https://tracker.yandex.ru/CHEOPSFRONT-1024", "name": "https://tracker.yandex.ru/CHEOPSFRONT-1024"}, {"type": "link", "url": "http://selenium1py.pythonanywhere.com/catalogue/the-city-and-the-stars_95/", "name": "Страница товара, с которой работает тест"}]}