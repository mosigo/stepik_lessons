{
  "uid" : "c801808f06243253",
  "name" : "test_guest_can_add_product_to_basket[offer7]",
  "fullName" : "module_5.test_product_page.TestProductPage#test_guest_can_add_product_to_basket",
  "historyId" : "8433857a769ecd2ca3eba03399b040cb",
  "time" : {
    "start" : 1624135828369,
    "stop" : 1624135830910,
    "duration" : 2541
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: В сообщение об успешном добавлении товара в корзину указано неверное название товара \"Coders at Work book\", а должно быть \"Coders at Work\"\nassert 'Coders at Work' == 'Coders at Work book'\n  - Coders at Work book\n  ?               -----\n  + Coders at Work",
  "statusTrace" : "self = <module_5.test_product_page.TestProductPage object at 0x10ee786d0>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"896a46a7e6a3feb2ee06b0902c1ac027\")>, promo_offer = 'offer7'\n\n    @pytest.mark.xfail\n    @pytest.mark.parametrize('promo_offer',\n                             [\"offer0\", \"offer1\", \"offer2\", \"offer3\", \"offer4\", \"offer5\", \"offer6\", \"offer7\", \"offer8\",\n                              \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        # arrange\n        page = ProductPage(browser, link + promo_offer)\n        page.open()\n    \n        # act\n        page.add_to_basket()\n        page.solve_quiz_and_get_code()\n    \n        # assert\n        page.should_be_success_add_to_basket_message()\n    \n        expected_product_title = page.get_product_title()\n        actual_product_title = page.get_success_add_to_basket_product_name()\n>       assert expected_product_title == actual_product_title, \\\n            f'В сообщение об успешном добавлении товара в корзину указано неверное название товара ' \\\n            f'\"{actual_product_title}\", а должно быть \"{expected_product_title}\"'\nE       AssertionError: В сообщение об успешном добавлении товара в корзину указано неверное название товара \"Coders at Work book\", а должно быть \"Coders at Work\"\nE       assert 'Coders at Work' == 'Coders at Work book'\nE         - Coders at Work book\nE         ?               -----\nE         + Coders at Work\n\nmodule_5/test_product_page.py:31: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1624135825373,
      "stop" : 1624135828367,
      "duration" : 2994
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: В сообщение об успешном добавлении товара в корзину указано неверное название товара \"Coders at Work book\", а должно быть \"Coders at Work\"\nassert 'Coders at Work' == 'Coders at Work book'\n  - Coders at Work book\n  ?               -----\n  + Coders at Work",
    "statusTrace" : "self = <module_5.test_product_page.TestProductPage object at 0x10ee786d0>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"896a46a7e6a3feb2ee06b0902c1ac027\")>, promo_offer = 'offer7'\n\n    @pytest.mark.xfail\n    @pytest.mark.parametrize('promo_offer',\n                             [\"offer0\", \"offer1\", \"offer2\", \"offer3\", \"offer4\", \"offer5\", \"offer6\", \"offer7\", \"offer8\",\n                              \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        # arrange\n        page = ProductPage(browser, link + promo_offer)\n        page.open()\n    \n        # act\n        page.add_to_basket()\n        page.solve_quiz_and_get_code()\n    \n        # assert\n        page.should_be_success_add_to_basket_message()\n    \n        expected_product_title = page.get_product_title()\n        actual_product_title = page.get_success_add_to_basket_product_name()\n>       assert expected_product_title == actual_product_title, \\\n            f'В сообщение об успешном добавлении товара в корзину указано неверное название товара ' \\\n            f'\"{actual_product_title}\", а должно быть \"{expected_product_title}\"'\nE       AssertionError: В сообщение об успешном добавлении товара в корзину указано неверное название товара \"Coders at Work book\", а должно быть \"Coders at Work\"\nE       assert 'Coders at Work' == 'Coders at Work book'\nE         - Coders at Work book\nE         ?               -----\nE         + Coders at Work\n\nmodule_5/test_product_page.py:31: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "dab1f6d3ffe25f09",
      "name" : "stdout",
      "source" : "dab1f6d3ffe25f09.txt",
      "type" : "text/plain",
      "size" : 59
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1624135830980,
      "stop" : 1624135831805,
      "duration" : 825
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "module_5"
  }, {
    "name" : "suite",
    "value" : "test_product_page"
  }, {
    "name" : "subSuite",
    "value" : "TestProductPage"
  }, {
    "name" : "host",
    "value" : "iMac.local"
  }, {
    "name" : "thread",
    "value" : "28461-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "module_5.test_product_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "promo_offer",
    "value" : "'offer7'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "c801808f06243253.json",
  "parameterValues" : [ "'offer7'" ]
}