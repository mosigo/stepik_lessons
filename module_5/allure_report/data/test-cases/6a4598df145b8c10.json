{
  "uid" : "6a4598df145b8c10",
  "name" : "Гость может добавить товар в корзину (проверка промо)",
  "fullName" : "test_product_page.TestProductPage#test_guest_can_add_product_to_basket",
  "historyId" : "87c815e2ff57b386ed8170cc72071f13",
  "time" : {
    "start" : 1624567861949,
    "stop" : 1624567864060,
    "duration" : 2111
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: В сообщение об успешном добавлении товара в корзину указано неверное название товара \"Coders at Work book\", а должно быть \"Coders at Work\"\nassert 'Coders at Work' == 'Coders at Work book'\n  - Coders at Work book\n  ?               -----\n  + Coders at Work",
  "statusTrace" : "self = <module_5.test_product_page.TestProductPage object at 0x10bc5c910>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"07263b775cbd0f8c0eff711bbb1f696f\")>, promo_offer = 'offer7'\n\n    @allure.title('Гость может добавить товар в корзину (проверка промо)')\n    @pytest.mark.xfail\n    @pytest.mark.parametrize('promo_offer',\n                             [\"offer0\", \"offer1\", \"offer2\", \"offer3\", \"offer4\", \"offer5\", \"offer6\", \"offer7\", \"offer8\",\n                              \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        # arrange\n        full_link = link_with_promo + promo_offer\n        page = ProductPage(browser, full_link)\n        page.open()\n    \n        # act\n        page.add_to_basket()\n        page.solve_quiz_and_get_code()\n    \n        # assert\n        page.should_be_success_add_to_basket_message()\n    \n        expected_product_title = page.get_product_title()\n        actual_product_title = page.get_success_add_to_basket_product_name()\n    \n        with allure.step(\"Проверяем, что в сообщении об успешном добавлении товара указано верное название товара\"):\n>           assert expected_product_title == actual_product_title, \\\n                f'В сообщение об успешном добавлении товара в корзину указано неверное название товара ' \\\n                f'\"{actual_product_title}\", а должно быть \"{expected_product_title}\"'\nE           AssertionError: В сообщение об успешном добавлении товара в корзину указано неверное название товара \"Coders at Work book\", а должно быть \"Coders at Work\"\nE           assert 'Coders at Work' == 'Coders at Work book'\nE             - Coders at Work book\nE             ?               -----\nE             + Coders at Work\n\nmodule_5/test_product_page.py:70: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1624567858894,
      "stop" : 1624567861947,
      "duration" : 3053
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: В сообщение об успешном добавлении товара в корзину указано неверное название товара \"Coders at Work book\", а должно быть \"Coders at Work\"\nassert 'Coders at Work' == 'Coders at Work book'\n  - Coders at Work book\n  ?               -----\n  + Coders at Work",
    "statusTrace" : "self = <module_5.test_product_page.TestProductPage object at 0x10bc5c910>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"07263b775cbd0f8c0eff711bbb1f696f\")>, promo_offer = 'offer7'\n\n    @allure.title('Гость может добавить товар в корзину (проверка промо)')\n    @pytest.mark.xfail\n    @pytest.mark.parametrize('promo_offer',\n                             [\"offer0\", \"offer1\", \"offer2\", \"offer3\", \"offer4\", \"offer5\", \"offer6\", \"offer7\", \"offer8\",\n                              \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        # arrange\n        full_link = link_with_promo + promo_offer\n        page = ProductPage(browser, full_link)\n        page.open()\n    \n        # act\n        page.add_to_basket()\n        page.solve_quiz_and_get_code()\n    \n        # assert\n        page.should_be_success_add_to_basket_message()\n    \n        expected_product_title = page.get_product_title()\n        actual_product_title = page.get_success_add_to_basket_product_name()\n    \n        with allure.step(\"Проверяем, что в сообщении об успешном добавлении товара указано верное название товара\"):\n>           assert expected_product_title == actual_product_title, \\\n                f'В сообщение об успешном добавлении товара в корзину указано неверное название товара ' \\\n                f'\"{actual_product_title}\", а должно быть \"{expected_product_title}\"'\nE           AssertionError: В сообщение об успешном добавлении товара в корзину указано неверное название товара \"Coders at Work book\", а должно быть \"Coders at Work\"\nE           assert 'Coders at Work' == 'Coders at Work book'\nE             - Coders at Work book\nE             ?               -----\nE             + Coders at Work\n\nmodule_5/test_product_page.py:70: AssertionError",
    "steps" : [ {
      "name" : "Открываем страницу http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7",
      "time" : {
        "start" : 1624567861950,
        "stop" : 1624567863216,
        "duration" : 1266
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Добавляем товар в корзину",
      "time" : {
        "start" : 1624567863216,
        "stop" : 1624567863276,
        "duration" : 60
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Решаем задачку и получаем код для вставки на Степик",
      "time" : {
        "start" : 1624567863276,
        "stop" : 1624567864009,
        "duration" : 733
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверяем, что на странице отображается сообщение об успешном добавлении товара в корзину",
      "time" : {
        "start" : 1624567864010,
        "stop" : 1624567864020,
        "duration" : 10
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Извлекаем название товара из описания на странице",
      "time" : {
        "start" : 1624567864020,
        "stop" : 1624567864038,
        "duration" : 18
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Ищем плашку с сообщением об успешном добавлении товара в корзину",
      "time" : {
        "start" : 1624567864038,
        "stop" : 1624567864054,
        "duration" : 16
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверяем, что в сообщении об успешном добавлении товара указано верное название товара",
      "time" : {
        "start" : 1624567864054,
        "stop" : 1624567864060,
        "duration" : 6
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: В сообщение об успешном добавлении товара в корзину указано неверное название товара \"Coders at Work book\", а должно быть \"Coders at Work\"\nassert 'Coders at Work' == 'Coders at Work book'\n  - Coders at Work book\n  ?               -----\n  + Coders at Work\n",
      "statusTrace" : "  File \"/Users/mosigo/Yandex.Disk.localized/Documents/PycharmProjects/StepikSelenium/module_5/test_product_page.py\", line 70, in test_guest_can_add_product_to_basket\n    assert expected_product_title == actual_product_title, \\\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "b8eb42ecd4eb7ff0",
      "name" : "stdout",
      "source" : "b8eb42ecd4eb7ff0.txt",
      "type" : "text/plain",
      "size" : 66
    } ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1624567864131,
      "stop" : 1624567865002,
      "duration" : 871
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Страница продукта"
  }, {
    "name" : "story",
    "value" : "Гость добавляет товары в корзину"
  }, {
    "name" : "feature",
    "value" : "Добавление товаров в корзину"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "subSuite",
    "value" : "TestProductPage"
  }, {
    "name" : "host",
    "value" : "iMac.local"
  }, {
    "name" : "thread",
    "value" : "58628-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_product_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "promo_offer",
    "value" : "'offer7'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Пропущенные тесты",
      "matchedStatuses" : [ "skipped" ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "6a4598df145b8c10.json",
  "parameterValues" : [ "'offer7'" ]
}